// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorController;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;
import edu.wpi.first.wpilibj.motorcontrol.PWMVictorSPX;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
public static final String Left = "";
public static final String Right = "";

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS
private final WPI_TalonSRX Llead = new WPI_TalonSRX(14);
private final WPI_TalonSRX Lfollow = new WPI_TalonSRX(13);
private final WPI_TalonSRX Rlead = new WPI_TalonSRX(16);
private final WPI_TalonSRX Rfollow = new WPI_TalonSRX(15);
public final DifferentialDrive mDifferentialDrive = new DifferentialDrive(Llead, Rlead);


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private PWMVictorSPX left1;
private PWMVictorSPX left2;
private MotorControllerGroup left;
private PWMVictorSPX right1;
private PWMVictorSPX right2;
private MotorControllerGroup right;
private DifferentialDrive wheels;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public DriveTrain() {
        Rlead.configFactoryDefault();
        Rfollow.configFactoryDefault();
        Lfollow.configFactoryDefault();
        Llead.configFactoryDefault();

        Rfollow.follow(Rlead);
        Lfollow.follow(Llead);
        
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
left1 = new PWMVictorSPX(1);
 addChild("Left1",left1);
 left1.setInverted(false);

left2 = new PWMVictorSPX(0);
 addChild("Left2",left2);
 left2.setInverted(false);

left = new MotorControllerGroup(left1, left2  );
 addChild("Left",left);
 

right1 = new PWMVictorSPX(4);
 addChild("Right1",right1);
 right1.setInverted(false);

right2 = new PWMVictorSPX(5);
 addChild("Right2",right2);
 right2.setInverted(false);

right = new MotorControllerGroup(right1, right2  );
 addChild("Right",right);
 

wheels = new DifferentialDrive(left1, right1);
 addChild("Wheels",wheels);
 wheels.setSafetyEnabled(true);
wheels.setExpiration(0.1);
wheels.setMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

